# -*- coding: utf-8 -*-
"""Matplotlib Tutorial.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1_CQDmMHrYJveptv5jSB3BZURwTZ0844K

Matplotlib:
  * Useful for making plots
"""

# importing matplotlib library
import matplotlib.pyplot as plt

# import NumPy to get data for our plots
import numpy as np

x = np.linspace(0,10,100)
y = np.sin(x)
z = np.cos(x)
print(x)
print(y)
print(z)

"""Plotting the data"""

# Sine wave
plt.plot(x,y)
plt.show()

# Cosine wave
plt.plot(x,z)
plt.show()

# adding title x-axis and y-axis labels
plt.plot(x, y)
plt.xlabel('Angle')
plt.ylabel('Sine Value')
plt.title("Sine Wave")
plt.show()

# parabola
x = np.linspace(-10,10,20)
y = x**2
plt.plot(x,y)
plt.show()

plt.plot(x,y,'r+')
plt.show()

plt.plot(x,y,'g.')
plt.show()

plt.plot(x,y,'b*')
plt.show()

x = np.linspace(-5, 5, 100)
plt.plot(x, np.sin(x), 'g-') # green color with - symbol
plt.plot(x, np.cos(x), 'r--')

"""Bar Plot"""

flg = plt.figure()
ax = flg.add_axes([0,0,1,1]) # first 2 value represents(origin) coordinates and last 2 represents height and width
languages = ['English', 'French', 'Spanish', 'Hindi', 'Sanskrit']
people = [100, 50, 36, 138, 70]
ax.bar(languages, people)
plt.xlabel('Languages')
plt.ylabel('People')
plt.show()

"""Pie Chart"""

fig1 = plt.figure()
ax = fig1.add_axes([0,0,1,1])
languages = ['English', 'French', 'Spanish', 'Hindi', 'Sanskrit']
people = [100, 50, 36, 138, 70]
ax.pie(people, labels=languages, autopct='%1.1f%%') #Autopct is used for represent decimal values to consider for pie-chart
plt.show()

"""Scatter Plot"""

x = np.linspace(0,10,100) # first two values represent range and last value present number of equally spaced number to choose within the range
y = np.sin(x)
z = np.cos(x)
fig2 = plt.figure()
ax = fig2.add_axes([0,0,1,1])
ax.scatter(x, y, colorizer='r')
ax.scatter(x,z, colorizer='b')
plt.show()

"""3D Scatter Plot"""

fig3 = plt.figure()
ax = plt.axes(projection='3d')
z = 20 * np.random.random(1000)
x = np.sin(z)
y = np.cos(z)
ax.scatter(x, y, z, c=z,cmap='Blues')
plt.show()